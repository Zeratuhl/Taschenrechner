using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace Taschenrechner.XAML
{
    /// <summary>
    /// Interaktionslogik für AnsichtStandard.xaml
    /// </summary>
    public partial class AnsichtStandard : Page
    {
        // Definition der Variablen
        // Beinhaltet den Wert den aktuellen Buttons
        string content = "";
        // Beinhaltet die aktuelle Zahl
        double aktuellerWert = 0;
        // String welche die Eingabe aufnimmt
        string eingabe = "";
        // beinhaltet die zuletzt gewählte Rechenoperation
        char letzterechenOperation = '=';
        // Erst Zahl oder Ergebnis
        double letztesErgebnis = 0.0;
        // Soll prüfen ob bereits ein Komma im Wert ist
        bool komma = false;


        public AnsichtStandard()
        {
            InitializeComponent();            
        }
        

        // Wird aufgerufen wenn ein Button von 0 - 9 oder das Komma gedrückt wird
        private void button_Click(object sender, RoutedEventArgs e)
        {
            content = ((Button)sender).Content.ToString();

            if (komma && content.Equals(","))
            {
                buttonLöschen_Click(sender, e);
                MessageBox.Show("Ehrlich? 2 Kommata in einem Wert?", "Netter Versuch", MessageBoxButton.OK, MessageBoxImage.Error);

            }
            else if (!komma && content.Equals(","))
            {
                komma = true;
                // setzt den string eingabe aus den einzelnen Buttons die geklickt werden zusammen
                eingabe += content;
                // schreibt die eingegeben Zahlen/buchstaben in die Hauptanzeige
                Ausgabe.Text = eingabe;
                // Umwandlung von string in int um später zu rechnen
                aktuellerWert = double.Parse(eingabe);
            }
            else
            {   // TODO: warum diesen Part 2x ausführen und nicht auf else verzichten? alternativen?

                // setzt den string eingabe aus den einzelnen Buttons die geklickt werden zusammen
                eingabe += content;
                // schreibt die eingegeben Zahlen/buchstaben in die Hauptanzeige
                Ausgabe.Text = eingabe;
                // Umwandlung von string in int um später zu rechnen
                aktuellerWert = double.Parse(eingabe);
            }
        }


        // Wird ausgeführt wenn ein Funktionsbutton verwendet wird
        private void buttonFunktion_Click(object sender, RoutedEventArgs e)
        {   // Prüft ob schon eine Zahl eingegeben wurde
            if (!content.Equals(""))
            {
                Ausgabe.Text = "0";
                eingabe = "";
                char x = char.Parse((string)((Button)sender).Content);
                // ruft die Methode zur Berechnung auf
                LetzteRechenoperation(x);
            }
        }


        // Berechnungen
        private void LetzteRechenoperation(char rechenoperation)
        {   // Speichert im aktuellen durchlauf das vorangegangen letzte ergebnis.
            double zahl1 = letztesErgebnis;
            // Auswahl aufgrund der letzten Rechenoperation. Weil die aktuelle bereits das Gleichzeichen sein könnte
            switch (letzterechenOperation)
            {
                case '+':
                    letztesErgebnis = letztesErgebnis + aktuellerWert;
                    break;

                case '-':
                    letztesErgebnis = letztesErgebnis - aktuellerWert;
                    break;

                case 'x':
                    letztesErgebnis = letztesErgebnis * aktuellerWert;
                    break;

                case '/':
                    if (aktuellerWert == 0)
                    {
                        letztesErgebnis = 0;
                        MessageBox.Show("Durch 0 teilen? Mir fehlen die Worte...", "Netter Versuch", MessageBoxButton.OK, MessageBoxImage.Error);
                        break;
                    }
                    letztesErgebnis = letztesErgebnis / aktuellerWert;
                    break;

                case '=':// letzterechenOperation wird mit = initialisiert, damit der Inhalt von aktuellerWert zum 
                    // letztenErgenis wird.
                    // Danach wird die gewählte rechenopertion zur letztenrechenOperation.
                    // Bei erneutem Klick auf eine rechenoperation, wird die Erste dann ausgeführt.
                    letztesErgebnis = aktuellerWert;
                    break;
            }

            Ausgaben(10, zahl1, aktuellerWert, rechenoperation);

            // Gleichsetzung nach der Ausgabe damit mit dem errechenten Wert weiter gerechent werden kann
            aktuellerWert = letztesErgebnis;
            letzterechenOperation = rechenoperation;
            // zurecksetzen der Kommavariablen um wieder eins bei der 2. Zahl nutzen zu können
            komma = false;
        }


        public void Ausgaben(int zahlensystem, double zahl1, double aktuellerWert, char rechenoperation)
        {   // Wandelt den inhalt von Variable letztesErgebnis um

            Ausgabe.Text = letztesErgebnis.ToString();

            //prüft ob das letzen Reichenzeichen ein = war
            if (letzterechenOperation.Equals('='))
            {   // Wandelt das letze letzteErgebnis und für das aktuelle Rechenzeichen hinzu
                AusgabeFormel.Text = letztesErgebnis.ToString() + rechenoperation;
            }
            else
            {   // wenn das letze Rechenzeichen kein = war, werden die Werte ins gewünschte Zahlenformat gewandelt
                // und die Rechenzeichen zur Ausgabe hinzugefügt
                AusgabeFormel.Text = zahl1.ToString() + letzterechenOperation + aktuellerWert.ToString() + "=" + letztesErgebnis.ToString();
                // Speichert die fertige Formel zusätzlich in der History
                HistoryTextBox.Text = HistoryTextBox.Text + "\n" + AusgabeFormel.Text;
            }
        }

         
        //löscht die letzte Stelle der aktuellen Eingabe oder des Ergebnises
        private void Backspace_Click(object sender, RoutedEventArgs e)
        {
            // prüft oder mehr als eine Stelle im aktuellen Wert ist aktuellerWert
            if (Ausgabe.Text.Length > 1)
            {
                // Prüft ob der Wert in der Ausgabe genau 2 Stellen hat und ob der Wert mit - beginnt
                // ohne diese Anweisung, würde beim löschen der letzten Stelle nur das - bleiben, was zu einem Fehler
                // beim Parsing führt
                if (Ausgabe.Text.Length == 2 && Ausgabe.Text.StartsWith("-"))
                {
                    Ausgabe.Text = "0";
                    aktuellerWert = 0;
                    eingabe = "";
                }

                // Prüfung oder der zu löschende Wert ein Komma ist. Falls ja, Komma freigeben                
                if (Ausgabe.Text.Substring(Ausgabe.Text.Length - 1).Equals(","))
                {
                    komma = false;
                }


                // Entfernt den letzen index aus der Ausgabebox
                Ausgabe.Text = Ausgabe.Text.Remove(Ausgabe.Text.Length - 1, 1);

                // Durch eingabe des Kommas, sind die Längen der Ausgabe.Text und die Länge von aktuellerWert ungleich.
                // Daher muss erneut geprüft werden, ob aktuellerWert noch lang genug zum kürzen ist.
                if (aktuellerWert.ToString().Length > 1)
                {
                    // Die Variable aktuellerWert, wird zum String, dann wir der letze index entfernt und anschließend wird
                    // die Variable als double geparsed und gespeichert
                    aktuellerWert = double.Parse(aktuellerWert.ToString().Remove(aktuellerWert.ToString().Length - 1, 1));
                }

                // Wenn nur ein Ergebnis gekürzt werden soll, ist die Variable eingabe leer. Daher muss diese geprüft werden
                // um einen Fehler zu vermeiden
                if (eingabe.Length > 1)
                {
                    eingabe = eingabe.Remove(eingabe.Length - 1, 1);
                }

            }
            else
            {   // sollte nur noch eine Stelle in der Varialblen aktuellerWert sein, so wird einfach alles zur 0, oder geleert
                Ausgabe.Text = "0";
                aktuellerWert = 0;
                eingabe = "";
            }
        }


        // Löscht alle Eingaben
        private void buttonLöschen_Click(object sender, RoutedEventArgs e)
        {
            eingabe = "";
            aktuellerWert = 0;
            letzterechenOperation = '=';
            letztesErgebnis = 0;
            AusgabeFormel.Text = "0";
            Ausgabe.Text = "0";
            HistoryTextBox.Text = "";
            komma = false;
        }


        // Abfangen der Tastatureingabe
        private void Window_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Key == Key.D0 || e.Key == Key.NumPad0)
            {   // Ansprechen von Button1, Erzeugung eines neuen Events, 
                // instanzierung eines RoutedEventArgs bassierende auf der Klasse
                // Button und Ausführung von ClickEvent.                
                button0.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                // versucht den Fokus auf das Element zu legen. So wirkt der Button als würde er betätigt
                button0.Focus();
            }
            else if (e.Key == Key.D1 || e.Key == Key.NumPad1)
            {
                button1.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                button1.Focus();
            }
            else if (e.Key == Key.D2 || e.Key == Key.NumPad2)
            {
                button2.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                button2.Focus();
            }
            else if (e.Key == Key.D3 || e.Key == Key.NumPad3)
            {
                button3.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                button3.Focus();
            }
            else if (e.Key == Key.D4 || e.Key == Key.NumPad4)
            {
                button4.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                button4.Focus();
            }
            else if (e.Key == Key.D5 || e.Key == Key.NumPad5)
            {
                button5.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                button5.Focus();
            }
            else if (e.Key == Key.D6 || e.Key == Key.NumPad6)
            {
                button6.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                button6.Focus();
            }
            else if (e.Key == Key.D7 || e.Key == Key.NumPad7)
            {
                button7.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                button7.Focus();
            }
            else if (e.Key == Key.D8 || e.Key == Key.NumPad8)
            {
                button8.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                button8.Focus();
            }
            else if (e.Key == Key.D9 || e.Key == Key.NumPad9)
            {
                button9.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                button9.Focus();
            }
            else if (e.Key == Key.Delete)
            {
                Backspace.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                Backspace.Focus();
            }
            else if (e.Key == Key.Escape)
            {
                buttonLöschen.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                buttonLöschen.Focus();
            }
            else if (e.Key == Key.Enter)
            {
                // buttongleich.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                buttongleich.Focus();
            }
            else if (e.Key == Key.Add)
            {
                buttonPlus.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                buttonPlus.Focus();
            }
            else if (e.Key == Key.Subtract)
            {
                buttonMinus.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                buttonMinus.Focus();
            }
            else if (e.Key == Key.Multiply)
            {
                buttonMal.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                buttonMal.Focus();
            }
            else if (e.Key == Key.Divide)
            {
                buttonTeilen.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                buttonTeilen.Focus();
            }
            else if (e.Key == Key.OemComma || e.Key == Key.Decimal)
            {
                button_Komma.RaiseEvent(new RoutedEventArgs(Button.ClickEvent));
                button_Komma.Focus();
            }
        }
    }
}


XAML Code:

<Page x:Class="Taschenrechner.XAML.AnsichtStandard"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Taschenrechner.XAML"
      
      FocusManager.FocusedElement="{Binding ElementName=buttongleich}" 
     
      Title="AnsichtStandard" Height="610" Width="575" PreviewKeyDown="Window_KeyDown" >

    <Page.Foreground>
        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
    </Page.Foreground>

    <Page.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="0"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
    </Page.Background>

    <Grid>
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                <GradientStop Color="White" Offset="1"/>
                <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                <GradientStop Color="#FED1DEE6" Offset="0.931"/>
            </LinearGradientBrush>
        </Grid.Background>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15"/>
            <ColumnDefinition Width="55"/>
            <ColumnDefinition Width="55"/>
            <ColumnDefinition Width="55"/>
            <ColumnDefinition Width="55"/>
            <ColumnDefinition Width="55"/>
            <ColumnDefinition Width="55"/>
            <ColumnDefinition Width="15"/>
            <ColumnDefinition Width="185"/>
            <ColumnDefinition Width="15"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="0"/>
            <RowDefinition Height="82"/>
            <RowDefinition Height="13"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="18"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="22"/>
        </Grid.RowDefinitions>

        <TextBlock Name="AusgabeFormel" Grid.Column="1" Grid.ColumnSpan="6" TextWrapping="Wrap" FontStyle="Italic" FontSize="16" Text="0" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" Grid.Row="1" Margin="0,10,0,0" HorizontalAlignment="Left" >
            <TextBlock.Foreground>
                <SolidColorBrush Color="#FF292525"/>
            </TextBlock.Foreground>
        </TextBlock>



        <TextBlock Name="Ausgabe" Grid.Column="1" Grid.ColumnSpan="6" TextWrapping="Wrap" FontStyle="Italic" FontSize="32" Text="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" TextTrimming="CharacterEllipsis" Grid.Row="1">
            <TextBlock.Foreground>
                <SolidColorBrush Color="#FF292525"/>
            </TextBlock.Foreground>
        </TextBlock>


        <Button Name="buttonLöschen" FontSize="20" FontStyle="Italic" Content="Del" Grid.Row="8" Grid.Column="1" Click="buttonLöschen_Click" BorderBrush="#D8969696" >
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="buttonTeilen" FontSize="20" FontStyle="Italic" Content="/" Grid.Row="8" Grid.Column="4" Click="buttonFunktion_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="buttonMal" FontSize="28" FontStyle="Italic" Content="x" Grid.Row="8" Grid.Column="3" Click="buttonFunktion_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="buttonMinus" FontSize="28" FontStyle="Italic" FontWeight="Bold" Content="-" Grid.Column="4" Click="buttonFunktion_Click" Grid.Row="9" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>

        <Button Name="button7" FontSize="20" FontStyle="Italic" Content="7" Grid.Row="9" Grid.Column="1" Click="button_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="button8" FontSize="20" FontStyle="Italic" Content="8" Grid.Row="9" Grid.Column="2" Click="button_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="button9" FontSize="20" FontStyle="Italic" Content="9" Grid.Row="9" Grid.Column="3" Click="button_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="buttonPlus" FontSize="28" FontStyle="Italic" Content="+" Grid.Row="10" Grid.Column="4" Click="buttonFunktion_Click" BorderBrush="#D8969696" >
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>

        <Button Name="button4" FontSize="20" FontStyle="Italic" Content="4" Grid.Row="10" Grid.Column="1" Click="button_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="button5" FontSize="20" FontStyle="Italic" Content="5" Grid.Row="10" Grid.Column="2" Click="button_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="button6" FontSize="20" FontStyle="Italic" Content="6" Grid.Row="10" Grid.Column="3" Click="button_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>

        <Button Name="button1" FontSize="20" FontStyle="Italic" Content="1" Grid.Row="11" Grid.Column="1" Click="button_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="button2" FontSize="20" FontStyle="Italic" Content="2" Grid.Row="11" Grid.Column="2" Click="button_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="button3" FontSize="20" FontStyle="Italic" Content="3" Grid.Row="11" Grid.Column="3" Click="button_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="buttongleich" FontSize="28" FontStyle="Italic" Content="=" Grid.Row="11" Grid.RowSpan="2" Grid.Column="4" Click="buttonFunktion_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>

        <Button Name="button0" FontSize="20" FontStyle="Italic" Content="0" Grid.Row="12" Grid.Column="1" Grid.ColumnSpan="2" Click="button_Click" BorderBrush="#D8969696">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button Name="button_Komma" FontSize="28" FontStyle="Italic" Content="," Grid.Row="12" Grid.Column="3" BorderBrush="#D8969696" Click="button_Click">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>
        <Button x:Name="Backspace" FontSize="32" FontStyle="Italic" FontFamily="Microstoft Sans Serif"  Content="&#x00AB;" Grid.Row="8" Grid.Column="2" Click="Backspace_Click" BorderBrush="#D8969696" >
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFBFBEBE" Offset="0.004"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FEE2DADA" Offset="0.231"/>
                    <GradientStop Color="#FED1DEE6" Offset="0.931"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" Offset="1"/>
                </LinearGradientBrush>
            </Button.Foreground>
        </Button>

        <TextBox Name="HistoryTextBox" Grid.Column="8" Grid.Row="2" TextWrapping="Wrap" FontStyle="Italic"  Grid.RowSpan="11" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Background="#FFD5E7FF" BorderBrush="#D8969696" >
            <TextBox.Foreground>
                <SolidColorBrush Color="#FF2D3032"/>
            </TextBox.Foreground>
        </TextBox>

    </Grid>
</Page>
